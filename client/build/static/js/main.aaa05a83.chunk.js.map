{"version":3,"sources":["components/BarChart.js","components/PieChart.js","components/LineChart.js","components/RadarChart.js","components/Dashboard.js","components/SignIN.js","components/SignUp.js","components/Navbar.js","components/HomePage.js","components/PrePdf.js","components/CreateEvent.js","components/SpeakerFields.js","components/PostEvent.js","components/CordinatorFields.js","components/EditEvent.js","components/DeleteEvent.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","width","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","PieChart","LineChart","RadarChart","Dashboard","useState","propDate","setPropDate","propDateTo","setPropDateTo","id","className","class","for","required","type","name","value","onChange","e","target","obj","givenName","familyName","email","withRouter","props","console","log","setName","setSName","setEmail","email1","setEmail1","pass","setPass","responseGoogle","Response","profileObj","googleId","changeUser","changeSUser","changeUEmail","signedin","sign","axios","post","password","then","response","success","history","push","catch","err","clientId","buttonText","theme","onSuccess","onFailure","cookiePolicy","placeholder","onClick","to","fullName","setFullName","secPass","setSecPass","window","alert","username","setuName","usersname","setuSName","useEffect","usname","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","res","isSign","href","x","document","getElementById","HomePage","ref","React","createRef","today","Date","PrePdf","cellPadding","cellSpacing","colspan","src","style","maxWidth","getDate","getMonth","getFullYear","eventName","eventId","evntType","durEvnt","evntLevel","orgInst","deptName","inputList","map","i","textAlign","colSpan","cordName","cordEmail","cordNumber","padding","changeState","timer","timerProgressBar","didOpen","showLoading","get","responseType","pdfBlob","Blob","saveAs","yyyy","mm","String","padStart","dd","dd1","minDate","minDate2","CreateEvent","depCount","setDepCount","dep","setDep","checkState","setCheck","setInputList","setevntId","setevntName","setevntType","setdurEvnt","setevntLevel","setorgInst","setdeptName","aripCount","cipsCount","cmpicaCount","cspitCount","depstarCount","i2imCount","mtinCount","pdpiasCount","rpcpCount","count","setCount","setEvntIdCount","Number","a","countRes","handleInputChange","index","list","handleAddClick","submitForm","userEmail","status","htmlFor","disabled","min","autoComplete","length","splice","handleRemoveClick","preventDefault","CordinatorFields","spkName","spkEmail","spkCV","spkPhoto","PostEvent","actDate","setactDate","actDateTo","setactDateTo","evntDesc","setevntDesc","noOfStud","setnoOfStud","evntPic1","setevntPic1","evntPic2","setevntPic2","evntPic3","setevntPic3","evntPic4","setevntPic4","evntCerti","setevntCerti","evntPstr","setevntPstr","studSheet","setstudSheet","fields","postfields","handleInputChange1","files","action","method","encType","rows","input","defaultProps","onSuccessSubmit","confirm","EditEvent","getData","onSubmit","SpeakerFields","DeleteEvent","App","isSignedIn","setSignedin","setSign","uname","setUName","setUSName","uemail","setUEmail","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aaa05a83.chunk.js","sourcesContent":["import { Bar } from 'react-chartjs-2';\r\n\r\nconst BarChart = () => {\r\n    return (\r\n        <div>\r\n            <Bar \r\n                data={{\r\n                    labels: [2016, 2017, 2018, 2019, 2020, 2021],\r\n                    datasets: [\r\n                        {\r\n                          label: 'No of Events',\r\n                          data: [12, 10, 2, 3, 5, 15],\r\n                          backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)',\r\n                            'rgba(255, 159, 64, 0.5)',\r\n                          ],\r\n                          borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                          ],\r\n                          borderWidth: 1,\r\n                        },\r\n                      ],\r\n                    }\r\n                }\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart;","import { Pie } from 'react-chartjs-2';\r\n\r\nconst PieChart = () => {\r\n    return (\r\n        <div>\r\n            <Pie \r\n                data={{\r\n                    labels: [2016, 2017, 2018, 2019, 2020, 2021],\r\n                    datasets: [\r\n                        {\r\n                          label: 'No of Student',\r\n                          data: [502, 419, 650, 780, 789, 803],\r\n                          backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)',\r\n                            'rgba(255, 159, 64, 0.5)',\r\n                          ],\r\n                          borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                          ],\r\n                          borderWidth: 1,\r\n                        },\r\n                      ],\r\n                    }\r\n                }\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChart;","import {  Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = () => {\r\n    return (\r\n        <div>\r\n            <Line \r\n                data={{\r\n                    labels: [\"Webinar\", \"Confrence\", \"Seminar\", \"FTP\", \"HTTP\"],\r\n                    datasets: [\r\n                        {\r\n                          label: 'No Of Event Type',\r\n                          data: [12, 19, 3, 5, 2, 3],\r\n                          backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)',\r\n                          ],\r\n                          borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                          ],\r\n                          borderWidth: 1,\r\n                        },\r\n                      ],\r\n                    }\r\n                }\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart;","import {  Radar } from 'react-chartjs-2';\r\n\r\nconst RadarChart = () => {\r\n    return (\r\n        <div>\r\n            <Radar \r\n                data={{\r\n                    labels: [\"CSPIT\", \"DEPSTAR\", \"PDPIAS\", \"RPCP\", \"CMPICA\", \"I2IM\"],\r\n                    datasets: [\r\n                        {\r\n                          label: 'Events In Institutes',\r\n                          data: [6, 10, 2, 13, 5, 15],\r\n                          backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.5)',\r\n                            'rgba(54, 162, 235, 0.5)',\r\n                            'rgba(255, 206, 86, 0.5)',\r\n                            'rgba(75, 192, 192, 0.5)',\r\n                            'rgba(153, 102, 255, 0.5)',\r\n                            'rgba(255, 159, 64, 0.5)',\r\n                          ],\r\n                          borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                          ],\r\n                          borderWidth: 1,\r\n                        },\r\n                      ],\r\n                    }\r\n                }\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                            },\r\n                        },],\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadarChart;","import './css/Dashboard.css';\r\nimport { useState } from 'react';\r\nimport BarChart from './BarChart';\r\nimport PieChart from './PieChart';\r\nimport LineChart from './LineChart';\r\nimport RadarChart from './RadarChart';\r\n\r\nfunction Dashboard(){\r\n    const [propDate, setPropDate] = useState('');\r\n    const [propDateTo, setPropDateTo] = useState('');\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"card\">\r\n                <div className='container'>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-25\">\r\n                            <label for=\"date\"><b>Proposed Date From</b></label>\r\n                        </div>\r\n                        <div class=\"col-75\">\r\n                            <input required className=\"input\" type=\"date\" id=\"sdate\" name=\"eventstartdate\"\r\n                                value={propDate} onChange={(e) => setPropDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-25\">\r\n                            <label for=\"date\"><b>To</b></label>\r\n                        </div>\r\n                        <div class=\"col-75\">\r\n                            <input required className=\"input\" type=\"date\" id=\"edate\" name=\"eventenddate\"\r\n                                value={propDateTo} onChange={(e) => setPropDateTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-btn\">\r\n                        <div class=\"row\">\r\n                            <input className=\"submit\" type=\"submit\" value=\"GO!\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mainContainer\">\r\n                <div id=\"card\" className=\"chart\">\r\n                    <div className=\"chart1\">\r\n                        <BarChart />\r\n                        <p>Number Of Events</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"card\" className=\"chart\">\r\n                    <div className=\"chart1\">\r\n                        <PieChart />\r\n                        <p>Number Of Students</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mainContainer\">\r\n                <div id=\"card\" className=\"chart\">\r\n                    <div className=\"chart1\">\r\n                        <LineChart />\r\n                        <p>No Of Event Type</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"card\" className=\"chart\">\r\n                    <div className=\"chart1\">\r\n                        <RadarChart />\r\n                        <p>Events In Institutes</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import './css/SignIN.css';\r\nimport Dashboard from './Dashboard';\r\nimport axios from 'axios'\r\nimport { useState, Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nlet obj = {\r\n    givenName: \"User\", \r\n    familyName: \"Name\",\r\n    email: 'UserName@mail.com'\r\n};\r\n\r\nfunction SignIN(props){\r\n    console.log(props)\r\n    const [name, setName] = useState('User');\r\n    const [sname, setSName] = useState('Name');\r\n    const [email, setEmail] = useState('UserName@mail.com');\r\n\r\n    const [email1, setEmail1] = useState('')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const responseGoogle = (Response) => {\r\n        //console.log(Response);\r\n        obj = Response.profileObj;\r\n        //console.log(Response.profileObj);\r\n        //console.log(obj.givenName);\r\n        setName(obj.givenName);\r\n        setSName(obj.familyName);\r\n        setPass(obj.googleId)\r\n        setEmail(obj.email)\r\n        setEmail1(obj.email)\r\n        props.changeUser(obj.givenName)\r\n        props.changeSUser(obj.familyName)\r\n        props.changeUEmail(obj.email)\r\n        props.signedin(true)\r\n        props.sign(true)\r\n        // {<Redirect to='/dashboard' />}\r\n        // props.history.push('/dashboard')\r\n        axios.post('/userSignin', {\r\n            email: Response.profileObj.email,\r\n            password: Response.profileObj.googleId\r\n        })\r\n        .then((response) => {\r\n            //console.log(response)\r\n            if(response.data.success){\r\n                props.history.push('/dashboard');\r\n            } else {\r\n                console.log('can not signin Register First')\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const submitDetails = () => {\r\n        axios.post('/userSignin', {\r\n            email: email1,\r\n            password: pass\r\n        })\r\n        .then((response) => {\r\n            //console.log(response)\r\n            if(response.data.success){\r\n                props.history.push('/dashboard');\r\n            } else {\r\n                console.log('can not signin Register First')\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"formContainer\">\r\n                    <div class=\"form\">\r\n                        <h1 class=\"heading\">Sign In</h1>\r\n                        {/* <h1 class=\"heading\">Sign In { name } {sname}</h1> */}\r\n                \r\n                        <div id=\"socialContainer\">\r\n                            {/* <img class=\"social\" src=\"http://pluspng.com/img-png/google-logo-png-open-2000.png\" alt=\"Google\" /> */}\r\n                            <GoogleLogin\r\n                                clientId=\"671510511921-l5u9j6o9dn6uoflbr912kf84uva07th2.apps.googleusercontent.com\"\r\n                                buttonText=\"Login\"\r\n                                theme='dark'\r\n                                onSuccess={ responseGoogle }\r\n                                onFailure={ responseGoogle }\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"inputContainer\">\r\n                        <div>\r\n                            <input class=\"sinput\" type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                        </div>\r\n                        <div>\r\n                            <input class=\"sinput\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick = { submitDetails } id=\"submit\" class=\"ssubmit\" name=\"submit\" >SignIn</button>\r\n                        </div>\r\n                        <div>\r\n                            <p>Not Registered?\r\n                                <Link to='/signup' onClick={() => props.signedin(true)}>\r\n                                    <span>Create an account</span>\r\n                                </Link>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport {obj};\r\nexport default withRouter(SignIN);","import './css/SignIN.css';\r\nimport { useState, Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nlet obj = {\r\n    givenName: \"User\", \r\n    familyName: \"Name\",\r\n    email: 'UserName@mail.com'\r\n};\r\nfunction SignUp(props){\r\n\r\n    const [name, setName] = useState('User');\r\n    const [sname, setSName] = useState('Name');\r\n    const [email, setEmail] = useState('UserName@mail.com');\r\n\r\n    const [fullName, setFullName] = useState('')\r\n    const [email1, setEmail1] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [secPass, setSecPass] = useState('')\r\n\r\n    const responseGoogle = (Response) => {\r\n        console.log(Response);\r\n        obj = Response.profileObj;\r\n        console.log(Response.profileObj);\r\n        console.log(obj.givenName);\r\n        setName(obj.givenName);\r\n        setFullName(obj.name)\r\n        setSName(obj.familyName);\r\n        setPass(obj.googleId)\r\n        setEmail(obj.email)\r\n        setEmail1(obj.email)\r\n        props.changeUser(obj.givenName)\r\n        props.changeSUser(obj.familyName)\r\n        props.changeUEmail(obj.email)\r\n        props.signedin(true)\r\n        props.sign(true)\r\n        // {<Redirect to='/dashboard' />}\r\n        // props.history.push('/dashboard')\r\n        \r\n        axios.post('/saveUser', {\r\n            name: Response.profileObj.name,\r\n            email: Response.profileObj.email,\r\n            password: Response.profileObj.googleId\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n            props.history.push('/dashboard');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const submitDetails = () => {\r\n        if(pass != secPass){\r\n            window.alert('enter the same password')\r\n        } else {\r\n            axios.post('/saveUser', {\r\n                name: fullName,\r\n                email: email1,\r\n                password: pass\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (  \r\n        <div id=\"formContainer\">\r\n            <div id='form' class=\"form\">\r\n                <h1 class=\"heading\">Register</h1>\r\n\r\n                <div id=\"socialContainer\">\r\n                    {/* <img class=\"social\" src=\"http://pluspng.com/img-png/google-logo-png-open-2000.png\" alt=\"Google\" /> */}\r\n                    <GoogleLogin\r\n                                clientId=\"671510511921-l5u9j6o9dn6uoflbr912kf84uva07th2.apps.googleusercontent.com\"\r\n                                buttonText=\"Login\"\r\n                                theme='dark'\r\n                                onSuccess={ responseGoogle }\r\n                                onFailure={ responseGoogle }\r\n                                cookiePolicy={'single_host_origin'}\r\n                            />\r\n                </div>\r\n\r\n                <div id=\"inputContainer\">\r\n                    <div>\r\n                        <input class=\"sinput\" type=\"text\" name=\"name\" placeholder=\"Enter Your Name\" \r\n                        value={fullName}\r\n                        onChange = { e => setFullName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input class=\"sinput\" type=\"email\" name=\"email\" placeholder=\"Email\" \r\n                        value={email1}\r\n                        onChange = { e => setEmail1(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input class=\"sinput\" type=\"password\" name=\"password\" placeholder=\"Password\" \r\n                        value={pass}\r\n                        onChange = { e => setPass(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input class=\"sinput\" type=\"password\" name=\"password\" placeholder=\"Confirm Password\" \r\n                        value={secPass}\r\n                        onChange = { e => setSecPass(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit\" class=\"ssubmit\" onClick = { submitDetails } name=\"submit\">Register</button>\r\n                    </div>\r\n                    <div>\r\n                        <p>Already Registered?\r\n                            <Link to='/signin'>\r\n                                <span>Sign IN</span>\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default withRouter(SignUp);","import './css/Navbar.css';\r\nimport _ from 'lodash';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nfunction Navbar(props){\r\n    const [username, setuName] = useState('User');\r\n    const [usersname, setuSName] = useState('Name');\r\n\r\n    function changeUName(){\r\n      setuName(props.name)\r\n      setuSName(props.usname)\r\n    }\r\n    //let fun = setTimeout(changeUName, 1);\r\n    useEffect(() => {\r\n      changeUName()\r\n    }, [props.name, props.usname])\r\n\r\n    // function confirmMessage(){\r\n    //   var r = window.confirm( \" Are You Sure? \" );\r\n    //   if(r === true){\r\n    //     setuName('User')\r\n    //     setuSName('Name')\r\n    //     props.history.push('/signIn');\r\n    //   }\r\n    // }\r\n\r\n    const onLogout = () => {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You will Signout!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, SignOut!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          Swal.fire(\r\n            {\r\n              title: 'you are now Signout!',\r\n              text: 'you will be redirected to Login/Signup Page',\r\n              icon: 'success',\r\n            }\r\n          ).then((res) => {\r\n            if(res.isConfirmed){\r\n              setuName('User')\r\n              setuSName('Name')\r\n              props.signedin(false)\r\n              props.sign(false)\r\n              props.history.push('/');\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    function myFunction() {\r\n        var x = document.getElementById(\"myTopnav\");\r\n        if (x.className === \"topnav\") {\r\n          x.className += \" responsive\";\r\n        } else {\r\n          x.className = \"topnav\";\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"topnav\" id=\"myTopnav\"  >\r\n            <h2 id=\"h2\">{ username }<span id=\"span\">{ usersname }</span></h2>\r\n            {/* <h2>{ props.name }</h2> */}\r\n            <div>\r\n              <div className=\"logoutBtn\">\r\n                <Link onClick = { onLogout } >LogOut</Link>\r\n              </div>\r\n              { props.isSign && <>\r\n                <div className=\"dropdown\">\r\n                  <button className=\"dropbtn\">Events\r\n                    <i className=\"fa fa-caret-down\"> </i>\r\n                  </button>\r\n                  <div className=\"dropdown-content\">\r\n                    <Link to=\"/createEvent\">Pre Event</Link>\r\n                    <Link to=\"/postEvent\">Post Event</Link>\r\n                    <Link to=\"/editEvent\">Edit Event</Link>\r\n                    <Link to=\"/deleteEvent\">Delete Event</Link>\r\n                  </div>\r\n                </div > \r\n                <Link className=\"dash\" to=\"/dashboard\">Dashboard</Link>\r\n                </>\r\n              }\r\n                <a href=\"javascript:void(0);\" className=\"icon\" onClick={myFunction}>&#9776;</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(Navbar);","import Navbar from './Navbar';\r\nimport SignIn from './SignIN'\r\nimport SignUp from './SignUp'\r\nimport { useState } from 'react';\r\n//import CreateEvent from './CreateEvent';\r\n\r\nfunction HomePage(props){\r\n    return(\r\n        <div>\r\n            {/* { console.log(\"in Home\", props.name, props.usname )} */}\r\n            <Navbar name = { props.name } usname = {props.usname} />\r\n            {/* <SignIn /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { useState, Component } from 'react';\r\nimport Pdf from 'react-to-pdf'\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver'\r\nimport './css/PrePdf.css';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ref = React.createRef();\r\nvar today = new Date();\r\n\r\nconst downloadingProgress = () => {\r\n   Swal.fire({\r\n      icon: 'info',\r\n       title: 'Downloading PDF, The Download Will Begin Shortly',\r\n       timer: 5000,\r\n       timerProgressBar: true,\r\n       didOpen: () => {\r\n           Swal.showLoading()\r\n       }\r\n   })\r\n}\r\n\r\n\r\nconst PrePdf = (props) => {\r\n\r\n      const createAndDownloasPdf = () => {\r\n         downloadingProgress();\r\n         axios.post('/create-pdf', {\r\n            eventId: props.eventId,\r\n            eventName: props.eventName,\r\n            evntType: props.evntType,\r\n            propDate: props.propDate,\r\n            propDateTo: props.propDateTo,\r\n            durEvnt: props.durEvnt,\r\n            evntLevel: props.evntLevel,\r\n            orgInst: props.orgInst,\r\n            deptName: props.deptName,\r\n            inputList: props.inputList})\r\n      .then(() => axios.get('fetch-pdf', { responseType: 'blob' }))\r\n      .then((res) => {\r\n         const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n         saveAs(pdfBlob, 'PreEventPdf.pdf');\r\n      })\r\n   }\r\n\r\n    return(\r\n       <>\r\n        <div class=\"invoice-box\" ref={ref}>\r\n            <table cellPadding=\"0\" cellSpacing=\"0\">\r\n               <tr class=\"top\">\r\n                  <td colspan=\"2\">\r\n                     <table>\r\n                        <tr>\r\n                           <td class=\"title\"><img  src=\"https://yt3.ggpht.com/a/AATXAJybtd3y_fW-_MgaRsbLpldlKK-02_AMYxU6ZEgKnQ=s900-c-k-c0xffffffff-no-rj-mo\"\r\n                              style={{width: '100%',maxWidth: '156px'}} /></td>\r\n                           <td>\r\n                              Datum: {`${today.getDate()}. ${today.getMonth() + 1}. ${today.getFullYear()}.`}\r\n                           </td>\r\n                        </tr>\r\n                     </table>\r\n                  </td>\r\n               </tr>\r\n               <tr class=\"information\">\r\n                  <td colspan=\"2\">\r\n                     <table>\r\n                        <tr>\r\n                           <td>\r\n                              Event name: {props.eventName}\r\n                           </td>\r\n                           <td>\r\n                              Event ID: {props.eventId}\r\n                           </td>\r\n                        </tr>\r\n                     </table>\r\n                  </td>\r\n               </tr>\r\n               <tr class=\"pdfHeading\">\r\n                  <td>Event Information</td>\r\n                  <td></td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n                  <td>Event ID:</td>\r\n                  <td>{props.eventId}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Event Name:</td>\r\n               <td>{props.eventName}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Event Type:</td>\r\n               <td>{props.evntType}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Proposed Date From:</td>\r\n               <td>{props.propDate}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Proposed Date To:</td>\r\n               <td>{props.propDateTo}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Event Duration:</td>\r\n               <td>{props.durEvnt}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Event Level:</td>\r\n               <td>{props.evntLevel}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Organizing Institute:</td>\r\n               <td>{props.orgInst}</td>\r\n               </tr>\r\n               <tr class=\"item\">\r\n               <td>Department Name:</td>\r\n               <td>{props.deptName}</td>\r\n               </tr>\r\n               <tr class=\"pdfHeading\">\r\n               <td>Coordinator Details:</td>\r\n               <td></td>\r\n               </tr>\r\n\r\n{/* {inputList.map((x, i) => {\r\n   return (\r\n      <div className=\"box\">\r\n            <input\r\n               required\r\n               className=\"input\"\r\n               type=\"text\"\r\n               name=\"cordName\"\r\n               placeholder=\"Cordinator Name\"\r\n               value={x.cordName}\r\n               onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n               required\r\n               type=\"email\"\r\n               className=\"input\"\r\n               name=\"cordEmail\"\r\n               placeholder=\"Cordinator Email\"\r\n               value={x.cordEmail}\r\n               onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n               required\r\n               type=\"number\"\r\n               className=\"input\"\r\n               name=\"cordNumber\"\r\n               placeholder=\"Contact Number\"\r\n               value={x.cordNumber}\r\n               onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <div className=\"btn-box\">\r\n               {inputList.length !== 1 && <button\r\n                  id='removefield'\r\n                  className=\"rem-btn\"\r\n                  onClick={(e) => { handleRemoveClick(i); e.preventDefault() }}>-</button>}\r\n               {inputList.length - 1 === i && <button id='addfield' className=\"add-btn\" onClick={handleAddClick}>+</button>}\r\n            </div>\r\n      </div>\r\n   );\r\n})} */}\r\n\r\n               {\r\n                  props.inputList.map((x, i) => {\r\n                     return (\r\n                        <>\r\n                           <tr style={{textAlign: 'center'}}>\r\n                              <td colSpan='2'>Coordinator No: {i + 1}</td>\r\n                           </tr>\r\n                           <tr class=\"item\">\r\n                              <td>Coordinator Name:</td>\r\n                              <td>{x.cordName}</td>\r\n                           </tr>\r\n                           <tr class=\"item\">\r\n                              <td>Coordinator Email:</td>\r\n                              <td>{x.cordEmail}</td>\r\n                           </tr>\r\n                           <tr class=\"item\">\r\n                              <td>Coordinator Contact Number:</td>\r\n                              <td>{x.cordNumber}</td>\r\n                           </tr>\r\n                        </>\r\n                     )\r\n                  })\r\n               }\r\n            </table>\r\n            <br />\r\n            <h1 class=\"justify-center\"></h1>\r\n         </div>\r\n      {/* <Pdf targetRef={ref} filename=\"pre.pdf\">\r\n            {({toPdf}) => <button className='submit' onClick={toPdf}>Generate PDF</button>}\r\n      </Pdf> */}\r\n      <div style={{textAlign: 'center', padding: '2% 0'}}>\r\n         <button className='submit' onClick={() => { props.changeState(false)}}>GO Back</button>\r\n         <span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\r\n         <button className=\"submit\" onClick = { createAndDownloasPdf } >Create HTML PDF</button>\r\n      </div>\r\n      </>\r\n    )\r\n};\r\n\r\nexport default PrePdf;","import './css/CreateEvent.css';\r\nimport PrePdf from './PrePdf';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver'\r\nimport Swal from 'sweetalert2'\r\n//import { Link } from 'react-router-dom';\r\n\r\nconst fireOnSuccess = () => {\r\n    Swal.fire({\r\n        title: 'Sending Data',\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: () => {\r\n            Swal.showLoading()\r\n        }\r\n    }).then(() => {\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'SuccessFull',\r\n            text: 'SuccessFully Submitted',\r\n            //timer: 3000,\r\n            //timerProgressBar: true,\r\n            // didOpen: () => {\r\n            //     Swal.showLoading()\r\n            // }\r\n        })\r\n    }\r\n    )\r\n}\r\nconst fireOnFailure = () => {\r\n    Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed',\r\n        text: 'Please Enter the Fields',\r\n    })\r\n}\r\n\r\nconst today = new Date();\r\n\r\nvar yyyy = today.getFullYear()\r\nvar mm = String(today.getMonth() + 1).padStart(2, '0')\r\nvar dd = String(today.getDate() + 1).padStart(2, '0')\r\nvar dd1 = String(today.getDate() + 2).padStart(2, '0')\r\nvar minDate = yyyy + '-' + mm + '-' + dd\r\nvar minDate2 = yyyy + '-' + mm + '-' + dd1\r\n\r\n\r\nfunction CreateEvent(props) {\r\n    //console.log(typeof(minDate))\r\n    const [depCount, setDepCount] = useState('0');\r\n    const [dep, setDep] = useState('');\r\n    const [checkState, setCheck] = useState(false);\r\n    const [inputList, setInputList] = useState([{ cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]);\r\n\r\n    const [eventId, setevntId] = useState('');\r\n    const [eventName, setevntName] = useState('');\r\n    const [evntType, setevntType] = useState('');\r\n    const [propDate, setPropDate] = useState('');\r\n    const [propDateTo, setPropDateTo] = useState('');\r\n    const [durEvnt, setdurEvnt] = useState('');\r\n    const [evntLevel, setevntLevel] = useState('');\r\n    const [orgInst, setorgInst] = useState('');\r\n    const [deptName, setdeptName] = useState('');\r\n    const [count, setCount] = useState({\r\n        aripCount: \"0\",\r\n        cipsCount: \"0\",\r\n        cmpicaCount: \"0\",\r\n        cspitCount: \"0\",\r\n        depstarCount: \"0\",\r\n        i2imCount: \"0\",\r\n        mtinCount: \"0\",\r\n        pdpiasCount: \"0\",\r\n        rpcpCount: \"0\"\r\n    })\r\n    const setEvntIdCount = (dep) => {\r\n        if (dep === 'CSPIT'){\r\n            setDepCount(count.cspitCount)\r\n            return String(Number(count.cspitCount) + 1)\r\n        }\r\n        if (dep === 'DEPSTAR'){\r\n            setDepCount(count.depstarCount)\r\n            return String(Number(count.depstarCount) + 1)\r\n        }\r\n        if (dep === 'PDPIAS'){\r\n            setDepCount(count.pdpiasCount)\r\n            return String(Number(count.pdpiasCount) + 1)\r\n        }\r\n        if (dep === 'CMPICA'){\r\n            setDepCount(count.cmpicaCount)\r\n            return String(Number(count.cmpicaCount) + 1)\r\n        }\r\n        if (dep === 'RPCP'){\r\n            setDepCount(count.rpcpCount)\r\n            return String(Number(count.rpcpCount) + 1)\r\n        }\r\n        if (dep === 'I2IM'){\r\n            setDepCount(count.i2imCount)\r\n            return String(Number(count.i2imCount) + 1)\r\n        }\r\n        if (dep === 'ARIP'){\r\n            setDepCount(count.aripCount)\r\n            return String(Number(count.aripCount) + 1)\r\n        }\r\n        if (dep === 'MTIN'){\r\n            setDepCount(count.mtinCount)\r\n            return String(Number(count.mtinCount) + 1)\r\n        }\r\n        if (dep === 'CIPS'){\r\n            setDepCount(count.cipsCount)\r\n            return String(Number(count.cipsCount) + 1)\r\n        }\r\n\r\n        console.log(depCount)\r\n        console.log(count)\r\n        return depCount\r\n    }\r\n\r\n    const getCount = () => {\r\n        axios.post('/getcount', {\r\n        }).then((countRes) => {\r\n            console.log(countRes)\r\n            setCount(countRes.data)\r\n        })\r\n    }\r\n    useEffect(async () => {\r\n        await getCount()\r\n    }, [props.email])\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]);\r\n    };\r\n\r\n    const create = () => {\r\n        setCheck(true)\r\n    }\r\n\r\n    const submitForm = async () => {\r\n        if (eventName === \"\" || evntType === \"\" || propDate === \"\" || propDateTo === \"\" || durEvnt === \"\" || evntLevel === \"\" || orgInst === \"\" || deptName === \"\" || inputList === \"\") {\r\n            fireOnFailure()\r\n        } else {\r\n            await axios.post('/preevent', {\r\n                userEmail: props.email,\r\n                eventId: eventId,\r\n                eventName: eventName,\r\n                evntType: evntType,\r\n                propDate: propDate,\r\n                propDateTo: propDateTo,\r\n                durEvnt: durEvnt,\r\n                evntLevel: evntLevel,\r\n                orgInst: orgInst,\r\n                deptName: deptName,\r\n                inputList: inputList\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n                console.log(response.status)\r\n                if(response.status === 200){\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Successfull',\r\n                        text: 'Successfully Submited',\r\n                    })\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Failed',\r\n                        text: 'Failed to Submit',\r\n                    })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            //fireOnSuccess()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>{!checkState ?\r\n            (<div>\r\n                <h1 className=\"eventLabel\">Pre Event</h1>\r\n                <div id='form'>\r\n                    <div class=\"grid-container\">\r\n                        <div class=\"col-25\" id=\"card\">\r\n                            <div class=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"eventId\"><b>Event ID</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input disabled className=\"input\" type=\"text\" id=\"eId\" name=\"eventID\" placeholder=\"YYYY - INSTITUTE - DEPARTMENT - COUNT\"\r\n                                            value={eventId} onChange={(e) => setevntId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"eventId\"><b>Event Name</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input required className=\"input\" type=\"text\" id=\"ename\" name=\"eventName\" placeholder=\"Code With Fun\"\r\n                                            value={eventName} onChange={(e) => setevntName(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"event\"><b>Type Of Event</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <select required className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                            value={evntType} onChange={(e) => setevntType(e.target.value)}\r\n                                        >\r\n                                            <option>Select Event Type</option>\r\n                                            <option value=\"Webinar\">Webinar</option>\r\n                                            <option value=\"Seminar\">Seminar</option>\r\n                                            <option value=\"Confrence\">Confrence</option>\r\n                                            <option value=\"Technical\">Technical</option>\r\n                                            <option value=\"Nontechnical\">Non-Technical</option>\r\n                                            <option value=\"Cultural\">Cultural</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"date\"><b>Proposed Date From</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input required className=\"input\" type=\"date\" id=\"sdate\" min={minDate} name=\"eventstartdate\"\r\n                                            value={propDate} onChange={(e) => setPropDate(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"date\"><b>To</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input required className=\"input\" type=\"date\" id=\"edate\" min={minDate2} name=\"eventenddate\"\r\n                                            value={propDateTo} onChange={(e) => setPropDateTo(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"date\"><b>Duration Of Event</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input required className=\"input\" type=\"number\" id=\"duration\" name=\"duration\"\r\n                                            value={durEvnt} onChange={(e) => setdurEvnt(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"event\"><b>Level Of Event</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <select required className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                            value={evntLevel} onChange={(e) => setevntLevel(e.target.value)}\r\n                                        >\r\n                                            <option >Select Level Of Event</option>\r\n                                            <option value=\"Institute\">Institute</option>\r\n                                            <option value=\"University\">University</option>\r\n                                            <option value=\"International\">International</option>\r\n                                            <option value=\"National\">National</option>\r\n                                            <option value=\"State\">State</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"organise\"><b>Organising Institute</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <select required className=\"input\"\r\n                                            value={orgInst} onChange={(e) => {\r\n                                                setorgInst(e.target.value)\r\n                                                setDepCount(setEvntIdCount(e.target.value))\r\n                                                setevntId(String(yyyy) + '-' + e.target.value + '-' + dep + '-' + setEvntIdCount(e.target.value))\r\n                                            }}\r\n                                        >\r\n                                            <option >Select Organizing Institute</option>\r\n                                            <option value=\"CSPIT\">CSPIT</option>\r\n                                            <option value=\"DEPSTAR\">DEPSTAR</option>\r\n                                            <option value=\"PDPIAS\">PDPIAS</option>\r\n                                            <option value=\"CMPICA\">CMPICA</option>\r\n                                            <option value=\"I2IM\">I2IM</option>\r\n                                            <option value=\"RPCP\">RPCP</option>\r\n                                            <option value=\"ARIP\">ARIP</option>\r\n                                            <option value=\"MTIN\">MTIN</option>\r\n                                            <option value=\"CIPS\">CIPS</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"dname\"><b>Department Name</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input required autoComplete='off' className=\"input\" type=\"text\" id=\"dname\" name=\"departname\" placeholder=\"KDPIT\"\r\n                                            value={deptName} onChange={(e) => {\r\n                                                setdeptName(e.target.value)\r\n                                                setDep(e.target.value)\r\n                                                setevntId(String(yyyy) + '-' + orgInst + '-' + e.target.value + '-' + String(Number(depCount) + 1))\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label htmlFor=\"cordinator\"><b>Cordinator's Details</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        {/* <CordinatorFields /> */}\r\n                                        {inputList.map((x, i) => {\r\n                                            return (\r\n                                                <div className=\"box\">\r\n                                                    <input\r\n                                                        required\r\n                                                        className=\"input\"\r\n                                                        type=\"text\"\r\n                                                        name=\"cordName\"\r\n                                                        placeholder=\"Cordinator Name\"\r\n                                                        value={x.cordName}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                    />\r\n                                                    <input\r\n                                                        required\r\n                                                        type=\"email\"\r\n                                                        className=\"input\"\r\n                                                        name=\"cordEmail\"\r\n                                                        placeholder=\"Cordinator Email\"\r\n                                                        value={x.cordEmail}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                    />\r\n                                                    <input\r\n                                                        required\r\n                                                        type=\"number\"\r\n                                                        className=\"input\"\r\n                                                        name=\"cordNumber\"\r\n                                                        placeholder=\"Contact Number\"\r\n                                                        value={x.cordNumber}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                    />\r\n                                                    <div className=\"btn-box\">\r\n                                                        {inputList.length !== 1 && <button\r\n                                                            id='removefield'\r\n                                                            className=\"rem-btn\"\r\n                                                            onClick={(e) => { handleRemoveClick(i); e.preventDefault() }}>-</button>}\r\n                                                        {inputList.length - 1 === i && <button id='addfield' className=\"add-btn\" onClick={handleAddClick}>+</button>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                        {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"sub-btn\">\r\n                            <div id=\"submit-btns\" class=\"row\">\r\n                                <input className=\"submit\" onClick={submitForm} type=\"submit\" value=\"Submit\" />\r\n                                {/* <button className=\"submit\" onClick = { createAndDownloasPdf } >Create HTML PDF</button> */}\r\n                                <span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\r\n                                <button className='submit' onClick={create}>Create PDF</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>) : (\r\n                <PrePdf\r\n                    changeState={checkState => setCheck(checkState)}\r\n                    eventId={eventId}\r\n                    eventName={eventName}\r\n                    evntType={evntType}\r\n                    propDate={propDate}\r\n                    propDateTo={propDateTo}\r\n                    durEvnt={durEvnt}\r\n                    evntLevel={evntLevel}\r\n                    orgInst={orgInst}\r\n                    deptName={deptName}\r\n                    inputList={inputList}\r\n                />\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateEvent;","import React, { useState } from \"react\";\r\n\r\nfunction CordinatorFields() {\r\n  const [inputList, setInputList] = useState([{ spkName: \"\", spkEmail: \"\", spkCV: \"\", spkPhoto: \"\" }]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { spkName: \"\", spkEmail: \"\", spkCV: \"\", spkPhoto: \"\" }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {inputList.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"spkName\"\r\n              placeholder=\"Speaker Name\"\r\n              value={x.spkName}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              name=\"spkEmail\"\r\n              placeholder=\"Speaker Email\"\r\n              value={x.spkEmail}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              className=\"input\"\r\n              name=\"spkCV\"\r\n              placeholder=\"Speaker CV\"\r\n              value={x.spkCV}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              className=\"input\"\r\n              name=\"spkPhoto\"\r\n              placeholder=\"Speaker Photo\"\r\n              value={x.spkCV}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <div className=\"btn-box\">\r\n              {inputList.length !== 1 && <button\r\n                className=\"rem-btn\"\r\n                onClick={() => handleRemoveClick(i)}>-</button>}\r\n              {inputList.length - 1 === i && <button className=\"add-btn\" onClick={handleAddClick}>+</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CordinatorFields;\r\n","import './css/CreateEvent.css';\r\nimport SpeakerFields from './SpeakerFields';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n//import { Link } from 'react-router-dom';\r\n\r\nfunction onSuccessSubmit(){\r\n    window.confirm( \" Success! \" );\r\n}\r\n\r\nfunction PostEvent(){\r\n    const [inputList, setInputList] = useState([{ spkName: \"\", spkEmail: \"\", spkCV: \"\", spkPhoto: \"\" }]);\r\n\r\n    const [actDate, setactDate] = useState('');\r\n    const [actDateTo, setactDateTo] = useState('');\r\n    const [evntDesc, setevntDesc] = useState('');\r\n    const [noOfStud, setnoOfStud] = useState('');\r\n    const [evntPic1, setevntPic1] = useState('');\r\n    const [evntPic2, setevntPic2] = useState('');\r\n    const [evntPic3, setevntPic3] = useState('');\r\n    const [evntPic4, setevntPic4] = useState('');\r\n    const [evntCerti, setevntCerti] = useState('');\r\n    const [evntPstr, setevntPstr] = useState('');\r\n    const [studSheet, setstudSheet] = useState('');\r\n\r\n    function fields(){\r\n        var postfields = {\r\n            actDate:actDate,\r\n            actDateTo:actDateTo,\r\n            inputList: inputList,\r\n            evntDesc: evntDesc,\r\n            noOfStud: noOfStud,\r\n            evntPic1: evntPic1,\r\n            evntPic2: evntPic2,\r\n            evntPic3: evntPic3,\r\n            evntPic4, evntPic4,\r\n            evntCerti: evntCerti,\r\n            evntPstr: evntPstr,\r\n            studSheet: studSheet\r\n        }\r\n        console.log(postfields)\r\n    }\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n      };\r\n      const handleInputChange1 = (e, index) => {\r\n        const { name, files } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = files;\r\n        setInputList(list);\r\n      };\r\n    \r\n      // handle click event of the Remove button\r\n      const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n      };\r\n    \r\n      // handle click event of the Add button\r\n      const handleAddClick = () => {\r\n        setInputList([...inputList, { spkName: \"\", spkEmail: \"\", spkCV: \"\", spkPhoto: \"\" }]);\r\n      };\r\n\r\n      const submitForm = async () => {\r\n        // if (eventName === \"\" || evntType === \"\" || propDate === \"\" || propDateTo === \"\" || durEvnt === \"\" || evntLevel === \"\" || orgInst === \"\" || deptName === \"\" || inputList === \"\") {\r\n        //     //fireOnFailure()\r\n        //     console.log('hello');\r\n        // } else {\r\n            fields();\r\n            await axios.post('/postFrom', {\r\n                actDate: actDate,\r\n                actDateTo: actDateTo,\r\n                evntDesc: evntDesc,\r\n                noOfStud: noOfStud,\r\n                evntPic1: evntPic1,\r\n                evntPic2: evntPic2,\r\n                evntPic3: evntPic3,\r\n                evntPic4: evntPic4,\r\n                evntCerti: evntCerti,\r\n                evntPstr: evntPstr,\r\n                studSheet: studSheet,\r\n                inputList: inputList\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            //fireOnSuccess()\r\n        // }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <h1 className=\"eventLabel\">Post Event</h1>\r\n        <div class=\"grid-container\">\r\n                <div className=\"col-25\" id=\"card\">\r\n                    <div className=\"container\">\r\n                        <form action='/postForm' method=\"POST\" encType=\"multipart/form-data\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"adate\"><b>Actual Date</b></label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" type=\"date\" id=\"adate\" name=\"actualdate\" \r\n                                     value={actDate} onChange={(e)=>setactDate(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"atdate\"><b>To</b></label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" type=\"date\" id=\"atdate\" name=\"eventenddate\" \r\n                                    value={actDateTo} onChange={(e)=>setactDateTo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"date\"><b>Speaker's Details</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        {/* <SpeakerFields /> */}\r\n                                        {inputList.map((x, i) => {\r\n                                            return (\r\n                                            <div>\r\n                                                <div className=\"row\">\r\n                                                    <div class=\"col-25\">\r\n                                                        <label for=\"date\">Speaker's Name</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-75\">\r\n                                                        <input\r\n                                                        className=\"input\"\r\n                                                        type=\"text\"\r\n                                                        name=\"spkName\"\r\n                                                        placeholder=\"Speaker Name\"\r\n                                                        value={x.spkName}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div class=\"col-25\">\r\n                                                        <label for=\"date\">Speaker's Email</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-75\">\r\n                                                        <input\r\n                                                        type=\"email\"\r\n                                                        className=\"input\"\r\n                                                        name=\"spkEmail\"\r\n                                                        placeholder=\"Speaker Email\"\r\n                                                        value={x.spkEmail}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div class=\"col-25\">\r\n                                                        <label for=\"date\">Speaker's CV</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-75\">\r\n                                                        <input\r\n                                                        type=\"file\"\r\n                                                        className=\"input\"\r\n                                                        name=\"spkCV\"\r\n                                                        placeholder=\"Speaker CV\"\r\n                                                        // value={x.spkCV}\r\n                                                        onChange={(e) => handleInputChange1(e, i)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div class=\"col-25\">\r\n                                                        <label for=\"date\">Speaker's Photo</label>\r\n                                                    </div>\r\n                                                    <div className=\"col-75\">\r\n                                                        <input\r\n                                                        type=\"file\"\r\n                                                        className=\"input\"\r\n                                                        name=\"spkPhoto\"\r\n                                                        placeholder=\"Speaker Photo\"\r\n                                                        // value={x.spkCV}\r\n                                                        onChange={e => handleInputChange1(e, i)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"btn-box\">\r\n                                                {inputList.length !== 1 && <button\r\n                                                    className=\"rem-btn\"\r\n                                                    onClick={() => handleRemoveClick(i)}>-</button>}\r\n                                                {inputList.length - 1 === i && <button className=\"add-btn\" onClick={handleAddClick}>+</button>}\r\n                                                </div>\r\n                                            </div>\r\n                                            );\r\n                                        })}\r\n                                        {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"edesc\"><b>Event Description</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <textarea className=\"input\" id=\"edesc\" name=\"eventdesc\" rows=\"10\"\r\n                                        value={evntDesc} onChange={(e)=>setevntDesc(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"studno\"><b>Number of Student's Attended the Event</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"number\" id=\"studno\" name=\"studentno\" \r\n                                        value={noOfStud} onChange={(e)=>setnoOfStud(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"ephoto\"><b>Photograph's Of Event</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto1\" \r\n                                         onChange={(e)=>setevntPic1(e.target.files)}\r\n                                        />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto2\" \r\n                                        onChange={(e)=>setevntPic2(e.target.files)}\r\n                                        />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto3\" \r\n                                        onChange={(e)=>setevntPic3(e.target.files)}\r\n                                        />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto4\" \r\n                                        onChange={(e)=>setevntPic4(e.target.files)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\"><b>Certificate</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"cert\" name=\"certificate\" \r\n                                        onChange={(e)=>setevntCerti(e.target.files)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"poster\"><b>Event Poster</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"poster\" name=\"poster\" \r\n                                        onChange={(e)=>setevntPstr(e.target.files)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\"><b>Sheet Of Registered Student's</b></label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"url\" id=\"cert\" name=\"sheeturl\" placeholder=\"https://www.google.com\"\r\n                                        value={studSheet} onChange={(e)=>setstudSheet(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            <div>\r\n                <div className=\"sub-btn\">\r\n                    <div class=\"row\">\r\n                        <input className=\"submit\" onClick={ submitForm } type=\"submit\" value=\"Submit\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostEvent;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CordinatorFields(props) {\r\n  const [inputList, setInputList] = useState(props.input);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  // const confirmDisable = () => {\r\n  //   if(props.disabled){\r\n  //     return (disabled)\r\n  //   }\r\n  // }\r\n  \r\n\r\n  useEffect( () => {\r\n    setInputList(props.input) \r\n    //console.log('done')\r\n  }, [props.input]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {inputList.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"cordName\"\r\n              \r\n              placeholder=\"Cordinator Name\"\r\n              value={x.cordName}\r\n              //value={props.name}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              name=\"cordEmail\"\r\n              placeholder=\"Cordinator Email\"\r\n              value={x.cordEmail}\r\n              //value={props.email}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              className=\"input\"\r\n              name=\"cordNumber\"\r\n              placeholder=\"Contact Number\"\r\n              value={x.cordNumber}\r\n              //value={props.number}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <div className=\"btn-box\">\r\n              {inputList.length !== 1 && <button\r\n                className=\"rem-btn\"\r\n                onClick={() => handleRemoveClick(i)}>-</button>}\r\n              {inputList.length - 1 === i && <button className=\"add-btn\" onClick={handleAddClick}>+</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nCordinatorFields.defaultProps = {\r\n  input: [{ cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]\r\n}\r\n\r\nexport default CordinatorFields;\r\n","import './css/CreateEvent.css';\r\nimport { useState } from 'react'\r\nimport CordinatorFields from './CordinatorFields';\r\nimport SpeakerFields from './SpeakerFields';\r\nimport axios from 'axios'\r\n//import { Link } from 'react-router-dom';\r\n\r\nfunction onSuccessSubmit(){\r\n    window.confirm( \" Success! \" );\r\n}\r\n\r\nfunction EditEvent(){\r\n    const [eventId, setevntId] = useState('');\r\n    const [eventName, setevntName] = useState('');\r\n    const [evntType, setevntType] = useState('');\r\n    const [propDate, setPropDate] = useState('');\r\n    const [propDateTo, setPropDateTo] = useState('');\r\n    const [durEvnt, setdurEvnt] = useState('');\r\n    const [evntLevel, setevntLevel] = useState('');\r\n    const [orgInst, setorgInst] = useState('');\r\n    const [deptName, setdeptName] = useState('');\r\n    const [inputList, setInputList] = useState([{ cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]);\r\n\r\n\r\n\r\n    const getData = async () => {\r\n        await axios.get(`/getdetails/${eventId}`)\r\n       .then((response) => { \r\n           console.log(response.data)\r\n           setevntName(response.data.eventName)\r\n           setevntType(response.data.evntType)\r\n           setPropDate(response.data.propDate)\r\n           setPropDateTo(response.data.propDateTo)\r\n           setdurEvnt(response.data.durEvnt)\r\n           setevntLevel(response.data.evntLevel)\r\n           setorgInst(response.data.orgInst)\r\n           setdeptName(response.data.deptName)\r\n           setInputList(response.data.inputList)\r\n       })\r\n       .catch( (err) => {\r\n           console.log(err);\r\n       })\r\n    }\r\n    return(\r\n        <div>\r\n            <h1 className=\"eventLabel\">Edit Event</h1>\r\n            <div id=\"card1\">\r\n                <div  className=\"container\">\r\n                    <div  className=\"row\">\r\n                        <div class=\"col-25\"> \r\n                            <label for=\"eventId\">Event ID</label>\r\n                        </div>\r\n                        <div class=\"col-75\">\r\n                                <input className=\"input\" type=\"text\" id=\"eId\" name=\"eventID\" placeholder=\"YYYY - INSTITUTE - DEPARTMENT - COUNT\" \r\n                                    value={eventId} onChange={(e)=>setevntId(e.target.value)}\r\n                                />\r\n                            <div style={{padding: '2%', textAlign: 'center'}}>\r\n                                <button onClick={ getData } className='submit'>Go</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <div class=\"grid-container\">\r\n            <div class=\"col-25\" id=\"card\">\r\n                    <div class=\"container\">\r\n                        <form onSubmit={ e => e.preventDefault() }>\r\n                            <div className=\"eventLabel\">\r\n                                <h3>Pre Event Information</h3>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div class=\"col-25\"> \r\n                                    <label for=\"eventId\">Event Name</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input required className=\"input\" type=\"text\" id=\"ename\" name=\"eventName\" placeholder=\"Code With Fun\" \r\n                                        value={eventName} onChange={(e)=>setevntName(e.target.value)}\r\n                                    />                                \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                <label for=\"event\">Type Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select required className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                    value={evntType} onChange={(e)=>setevntType(e.target.value)}\r\n                                    >\r\n                                        <option value=\"Webinar\">Webinar</option>\r\n                                        <option value=\"Seminar\">Seminar</option>\r\n                                        <option value=\"Confrence\">Confrence</option>\r\n                                        <option value=\"Technical\">Technical</option>\r\n                                        <option value=\"Nontechnical\">Non-Technical</option>\r\n                                        <option value=\"Cultural\">Cultural</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">Proposed Date From</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input required className=\"input\" type=\"date\" id=\"sdate\"  name=\"eventstartdate\" \r\n                                    value={propDate} onChange={(e)=>setPropDate(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">To</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input required className=\"input\" type=\"date\" id=\"edate\"  name=\"eventenddate\" \r\n                                    value={propDateTo} onChange={(e)=>setPropDateTo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">Duration Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input required className=\"input\" type=\"number\" id=\"duration\" name=\"duration\" \r\n                                    value={durEvnt} onChange={(e)=>setdurEvnt(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                <label for=\"event\">Level Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select required className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                    value={evntLevel} onChange={(e)=>setevntLevel(e.target.value)}\r\n                                >\r\n                                    <option value=\"Institute\">Institute</option>\r\n                                    <option value=\"University\">University</option>\r\n                                    <option value=\"International\">International</option>\r\n                                    <option value=\"National\">National</option>\r\n                                    <option value=\"State\">State</option>\r\n                                </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"organise\">Organising Institute</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select required className=\"input\"\r\n                                value={orgInst} onChange={ (e)=> {\r\n                                    setorgInst(e.target.value) }}\r\n                                >\r\n                                    <option value=\"CSPIT\">CSPIT</option>\r\n                                    <option value=\"DEPSTAR\">DEPSTAR</option>\r\n                                    <option value=\"PDPIAS\">PDPIAS</option>\r\n                                    <option value=\"CMPICA\">CMPICA</option>\r\n                                    <option value=\"I2IM\">I2IM</option>\r\n                                    <option value=\"RPCP\">RPCP</option>\r\n                                    <option value=\"ARIP\">ARIP</option>\r\n                                    <option value=\"MTIN\">MTIN</option>\r\n                                    <option value=\"CIPS\">CIPS</option>\r\n                                </select>\r\n                                </div>\r\n                            </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-25\">\r\n                            <label for=\"dname\">Department Name</label>\r\n                            </div>\r\n                            <div class=\"col-75\">\r\n                                <input required autoComplete='off' className=\"input\" type=\"text\" id=\"dname\" name=\"departname\" placeholder=\"KDPIT\" \r\n                                value={deptName} onChange={(e)=>{\r\n                                    setdeptName(e.target.value)\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-25\">\r\n                                <label for=\"cordinator\">Cordinator's Details</label>\r\n                            </div>\r\n                            <div class=\"col-75\">\r\n                                {/* {inputList.map(cordFields => ( */}\r\n                                    <CordinatorFields \r\n                                    input = { inputList }\r\n                                    ///key={cordFields.cordNumber}\r\n                                    //name = { cordFields.cordName }\r\n                                    //email = { cordFields.cordEmail }\r\n                                    //number = { cordFields.cordNumber }\r\n                                    />\r\n                                {/* ))} */}\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-25\" id=\"card\">\r\n                    <div className=\"container\">\r\n                        <form action='#'>\r\n                            <div className=\"eventLabel\">\r\n                                <h3>Post Event Information</h3>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"adate\">Actual Date</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" type=\"date\" id=\"adate\" name=\"actualdate\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"atdate\">To</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" type=\"date\" id=\"atdate\" name=\"eventenddate\" />\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"date\">Speaker's Details</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <SpeakerFields />\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"edesc\">Event Description</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <textarea className=\"input\" id=\"edesc\" name=\"eventdesc\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"studno\">Number of Student's Attended the Event</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"number\" id=\"studno\" name=\"studentno\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"ephoto\">Photograph's Of Event</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto1\" />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto2\" />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto3\" />\r\n                                        <input className=\"input\" type=\"file\" id=\"ephoto\" name=\"eventPhoto4\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\">Certificate</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"cert\" name=\"certificate\" />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"poster\">Event Poster</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"file\" id=\"poster\" name=\"poster\" />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\">Sheet Of Registered Student's</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" type=\"url\" id=\"cert\" name=\"sheeturl\" placeholder=\"https://www.google.com\"/>\r\n                                    </div>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            <div>\r\n                <div className=\"sub-btn\">\r\n                    <div class=\"row\">\r\n                        <input className=\"submit\" onClick = { onSuccessSubmit } type=\"submit\" value=\"Submit\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditEvent;","import './css/CreateEvent.css';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport CordinatorFields from './CordinatorFields';\r\nimport SpeakerFields from './SpeakerFields';\r\n//import { Link } from 'react-router-dom';\r\n\r\nfunction onSuccessSubmit(){\r\n    window.confirm( \" Success! \" );\r\n}\r\n\r\nfunction DeleteEvent(){\r\n\r\n    const [eventId, setevntId] = useState('');\r\n    const [eventName, setevntName] = useState('');\r\n    const [evntType, setevntType] = useState('');\r\n    const [propDate, setPropDate] = useState('');\r\n    const [propDateTo, setPropDateTo] = useState('');\r\n    const [durEvnt, setdurEvnt] = useState('');\r\n    const [evntLevel, setevntLevel] = useState('');\r\n    const [orgInst, setorgInst] = useState('');\r\n    const [deptName, setdeptName] = useState('');\r\n    const [inputList, setInputList] = useState([{ cordName: \"\", cordEmail: \"\", cordNumber: \"\" }]);\r\n\r\n\r\n\r\n    const getData = async () => {\r\n        await axios.post('/getdetails', { eventId })\r\n       .then((response) => { \r\n           console.log(response.data)\r\n           setevntName(response.data.eventName)\r\n           setevntType(response.data.evntType)\r\n           setPropDate(response.data.propDate)\r\n           setPropDateTo(response.data.propDateTo)\r\n           setdurEvnt(response.data.durEvnt)\r\n           setevntLevel(response.data.evntLevel)\r\n           setorgInst(response.data.orgInst)\r\n           setdeptName(response.data.deptName)\r\n           setInputList(response.data.inputList)\r\n       })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 className=\"eventLabel\">Delete Event</h1>\r\n            <div id=\"card1\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div class=\"col-25\"> \r\n                            <label for=\"eventId\">Event ID</label>\r\n                        </div>\r\n                        <div class=\"col-75\">\r\n                            <input className=\"input\" type=\"text\" id=\"eId\" name=\"eventID\" placeholder=\"YYYY / INSTITUTE / DEPARTMENT / COUNT\" \r\n                            value={eventId} onChange={(e)=>setevntId(e.target.value)}\r\n                            />\r\n                            <div style={{padding: '2%', textAlign: 'center'}}>\r\n                                <button onClick={ getData } className='submit'>Go</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <div class=\"grid-container\">\r\n            <div class=\"col-25\" id=\"card\">\r\n            <div class=\"container\">\r\n                        <form onSubmit={ e => e.preventDefault() }>\r\n                            <div className=\"eventLabel\">\r\n                                <h3>Pre Event Information</h3>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div class=\"col-25\"> \r\n                                    <label for=\"eventId\">Event Name</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input disabled  className=\"input\" type=\"text\" id=\"ename\" name=\"eventName\" placeholder=\"Code With Fun\" \r\n                                        value={eventName} onChange={(e)=>setevntName(e.target.value)}\r\n                                    />                                \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                <label for=\"event\">Type Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select disabled  className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                    value={evntType} onChange={(e)=>setevntType(e.target.value)}\r\n                                    >\r\n                                        <option value=\"Webinar\">Webinar</option>\r\n                                        <option value=\"Seminar\">Seminar</option>\r\n                                        <option value=\"Confrence\">Confrence</option>\r\n                                        <option value=\"Technical\">Technical</option>\r\n                                        <option value=\"Nontechnical\">Non-Technical</option>\r\n                                        <option value=\"Cultural\">Cultural</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">Proposed Date From</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input disabled  className=\"input\" type=\"date\" id=\"sdate\"  name=\"eventstartdate\" \r\n                                    value={propDate} onChange={(e)=>setPropDate(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">To</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input disabled className=\"input\" type=\"date\" id=\"edate\"  name=\"eventenddate\" \r\n                                    value={propDateTo} onChange={(e)=>setPropDateTo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"date\">Duration Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input disabled className=\"input\" type=\"number\" id=\"duration\" name=\"duration\" \r\n                                    value={durEvnt} onChange={(e)=>setdurEvnt(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                <label for=\"event\">Level Of Event</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select disabled className=\"input\" id=\"event\" name=\"eventtype\"\r\n                                    value={evntLevel} onChange={(e)=>setevntLevel(e.target.value)}\r\n                                >\r\n                                    <option value=\"Institute\">Institute</option>\r\n                                    <option value=\"University\">University</option>\r\n                                    <option value=\"International\">International</option>\r\n                                    <option value=\"National\">National</option>\r\n                                    <option value=\"State\">State</option>\r\n                                </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"organise\">Organising Institute</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                <select disabled className=\"input\"\r\n                                value={orgInst} onChange={ (e)=> {\r\n                                    setorgInst(e.target.value) }}\r\n                                >\r\n                                    <option value=\"CSPIT\">CSPIT</option>\r\n                                    <option value=\"DEPSTAR\">DEPSTAR</option>\r\n                                    <option value=\"PDPIAS\">PDPIAS</option>\r\n                                    <option value=\"CMPICA\">CMPICA</option>\r\n                                    <option value=\"I2IM\">I2IM</option>\r\n                                    <option value=\"RPCP\">RPCP</option>\r\n                                    <option value=\"ARIP\">ARIP</option>\r\n                                    <option value=\"MTIN\">MTIN</option>\r\n                                    <option value=\"CIPS\">CIPS</option>\r\n                                </select>\r\n                                </div>\r\n                            </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-25\">\r\n                            <label for=\"dname\">Department Name</label>\r\n                            </div>\r\n                            <div class=\"col-75\">\r\n                                <input disabled autoComplete='off' className=\"input\" type=\"text\" id=\"dname\" name=\"departname\" placeholder=\"KDPIT\" \r\n                                value={deptName} onChange={(e)=>{\r\n                                    setdeptName(e.target.value)\r\n                                }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-25\">\r\n                                <label for=\"cordinator\">Cordinator's Details</label>\r\n                            </div>\r\n                            <div class=\"col-75\">\r\n                                {/* {inputList.map(cordFields => ( */}\r\n                                    <CordinatorFields \r\n                                    input = { inputList }\r\n                                    disabled = {true}\r\n                                    ///key={cordFields.cordNumber}\r\n                                    //name = { cordFields.cordName }\r\n                                    //email = { cordFields.cordEmail }\r\n                                    //number = { cordFields.cordNumber }\r\n                                    />\r\n                                {/* ))} */}\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-25\" id=\"card\">\r\n                    <div className=\"container\">\r\n                        <form action='#'>\r\n                            <div className=\"eventLabel\">\r\n                                <h3>Post Event Information</h3>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"adate\">Actual Date</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" disabled type=\"date\" id=\"adate\" name=\"actualdate\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-25\">\r\n                                    <label for=\"atdate\">To</label>\r\n                                </div>\r\n                                <div class=\"col-75\">\r\n                                    <input className=\"input\" disabled type=\"date\" id=\"atdate\" name=\"eventenddate\" />\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"date\">Speaker's Details</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <SpeakerFields value=\"disabled\"/>\r\n                                    </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"edesc\">Event Description</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <textarea className=\"input\" disabled id=\"edesc\" name=\"eventdesc\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"studno\">Number of Student's Attended the Event</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" disabled type=\"number\" id=\"studno\" name=\"studentno\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"ephoto\">Photograph's Of Event</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"ephoto\" name=\"eventPhoto1\" />\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"ephoto\" name=\"eventPhoto2\" />\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"ephoto\" name=\"eventPhoto3\" />\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"ephoto\" name=\"eventPhoto4\" />\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\">Certificate</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"cert\" name=\"certificate\" />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"poster\">Event Poster</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" disabled type=\"file\" id=\"poster\" name=\"poster\" />\r\n                                    </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                    <div class=\"col-25\">\r\n                                        <label for=\"cert\">Sheet Of Registered Student's</label>\r\n                                    </div>\r\n                                    <div class=\"col-75\">\r\n                                        <input className=\"input\" disabled type=\"url\" id=\"cert\" name=\"sheeturl\" placeholder=\"https://www.google.com\"/>\r\n                                    </div>\r\n                            </div>\r\n{/* \r\n<div class=\"row\">\r\n    <input onClick = { onSuccessSubmit } type=\"submit\" value=\"Submit\" />\r\n</div> */}\r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            <div>\r\n                <div className=\"sub-btn\">\r\n                    <div class=\"row\">\r\n                        <input style={{backgroundColor:\"#E74C3C\"}} className=\"submit\" onClick = { onSuccessSubmit } type=\"submit\" value=\"Submit\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteEvent;","//import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport SignIN from './components/SignIN';\nimport SignUp from './components/SignUp';\nimport Homepage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport CreateEvent from './components/CreateEvent';\nimport PrePdf from './components/PrePdf';\nimport PostEvent from './components/PostEvent';\nimport EditEvent from './components/EditEvent';\nimport DeleteEvent from './components/DeleteEvent';\nimport Dashboard from './components/Dashboard';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  const [isSignedIn, setSignedin] = useState(false)\n  const [isSign, setSign] = useState(false)\n  const [uname, setUName] = useState('User')\n  const [usname, setUSName] = useState('Name')\n  const [uemail, setUEmail] = useState('UserName@mail.com')\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar name = { uname } usname = { usname } isSign = { isSign } sign = { isSign => setSign(isSign)} signedin = { isSignedIn => setSignedin(isSignedIn)}/>\n        {/* <Homepage name = { uname } usname = { usname } /> */}\n        { !isSignedIn && <SignIN changeUser = {uname => setUName(uname)} \n                      changeSUser = {usname => setUSName (usname)} \n                      changeUEmail = {uemail => setUEmail(uemail)}\n                      signedin = { isSignedIn => setSignedin(isSignedIn)}\n                      sign = { isSign => setSign(isSign)}\n        />}\n        {/* {console.log(isSignedIn)} */}\n        <Switch>\n            <Route exact path='/signUp'>\n              <SignUp changeUser = {uname => setUName(uname)} \n                      changeSUser = {usname => setUSName (usname)}\n                      changeUEmail = {uemail => setUEmail(uemail)}\n                      signedin = { isSignedIn => setSignedin(isSignedIn)}\n                      sign = { isSign => setSign(isSign)}\n                      /></Route>\n            <Route exact path='/signIn'>\n              <SignIN changeUser = {uname => setUName(uname)} \n                      changeSUser = {usname => setUSName (usname)} \n                      changeUEmail = {uemail => setUEmail(uemail)}\n                      signedin = { isSignedIn => setSignedin(isSignedIn)}\n                      sign = { isSign => setSign(isSign)}\n              /> \n              {/* {console.log(\"in APP\",uname, usname)} */}\n            </Route>\n            <Route exact path='/createEvent'><CreateEvent email = { uemail }/></Route>\n            <Route exact path='/postEvent'><PostEvent /></Route>\n            <Route exact path='/editEvent'><EditEvent /></Route>\n            <Route exact path='/deleteEvent'><DeleteEvent /></Route>\n            <Route exact path='/dashboard'><Dashboard /></Route>\n            <Route exact path='/createPdf'><PrePdf /></Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}